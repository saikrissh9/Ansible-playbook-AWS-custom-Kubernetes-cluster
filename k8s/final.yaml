apiVersion: v1
kind: PersistentVolume
metadata:
  name: wp-pv
spec:
  capacity:
    storage: 4Gi
  accessModes:
    - ReadWriteMany
  nfs:
    server: nfs_server
    # Exported path of your NFS server
    path: "/html"

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: wp-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 3Gi
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv
spec:
  capacity:
    storage: 4Gi
  accessModes:
    - ReadWriteMany
  nfs:
    server: nfs_server
    # Exported path of your NFS server
    path: "/mysql"




---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 3Gi

---
apiVersion: v1
kind: Secret
metadata:
  name: mysql-pass
type: Opaque
data:
  password: c2Fp

# ---
# kind: NetworkPolicy
# apiVersion: networking.k8s.io/v1
# metadata:
#   name: netpolicy-db
# spec:
#   podSelector:
#     matchLabels:
#       app: mysql
#   ingress:
#   - from:
#     - podSelector:
#         matchLabels:
#           access: "wordpress"

---
apiVersion: v1
kind: Service
metadata:
  name: backend   # will be used as a value in
# WORDPRESS_DB_HOST in wordpress-deploy.yml
spec:
  ports:
    - port: 3306
  selector:
    app: mysql
  clusterIP: None

---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: backend
spec:
  strategy:
    type: Recreate
  #replicas: 3
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
     # schedulerName: stork
      containers:
      - name: be-mysql
        image: mysql:5.6
        env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-pass
              key: password
        ports:
        - containerPort: 3306
        volumeMounts:
        - mountPath: /var/lib/mysql
      volumes:
      - persistentVolumeClaim:
          claimName: mysql-pvc


---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: frontend
spec:
  strategy:
    type: Recreate
  replicas: 2
  selector:
    matchLabels:
      app: wordpress
  template:
    metadata:
      labels:
        app: wordpress
    spec:
      #schedulerName: stork
      containers:
      - name: fe-wordpress
        image: wordpress:4.8-apache
        name: wordpress
        env:
        - name: WORDPRESS_DB_HOST
          value: backend:3306
        - name: WORDPRESS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-pass
              key: password
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /var/www/html
        # resources:
        #   limits:
        #     cpu: 100m
      volumes:
      - persistentVolumeClaim:
          claimName: wp-pvc

---
kind: Service
apiVersion: v1
metadata:
  name: slkuberproject-svc
spec:
  type: NodePort
  selector:
    app: wordpress
  ports:
  - port: 80
    nodePort: 32000
    targetPort: 8080
    name: http